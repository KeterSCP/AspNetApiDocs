<Type Name="Tokenizer&lt;TSymbol,TSymbolType&gt;" FullName="System.Web.Razor.Tokenizer.Tokenizer&lt;TSymbol,TSymbolType&gt;">
  <TypeSignature Language="C#" Value="public abstract class Tokenizer&lt;TSymbol,TSymbolType&gt; : System.Web.Razor.StateMachine&lt;TSymbol&gt;, System.Web.Razor.Tokenizer.ITokenizer where TSymbol : SymbolBase&lt;TSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Tokenizer`2&lt;(class System.Web.Razor.Tokenizer.Symbols.SymbolBase`1&lt;!TSymbolType&gt;) TSymbol, TSymbolType&gt; extends System.Web.Razor.StateMachine`1&lt;!TSymbol&gt; implements class System.Web.Razor.Tokenizer.ITokenizer" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Tokenizer.Tokenizer`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Tokenizer(Of TSymbol, TSymbolType)&#xA;Inherits StateMachine(Of TSymbol)&#xA;Implements ITokenizer" />
  <TypeSignature Language="F#" Value="type Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; SymbolBase&lt;'SymbolType&gt;)&gt; = class&#xA;    inherit StateMachine&lt;'Symbol (requires 'Symbol :&gt; SymbolBase&lt;'SymbolType&gt;)&gt;&#xA;    interface ITokenizer" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSymbol">
      <Constraints>
        <BaseTypeName>System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;TSymbolType&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TSymbolType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Web.Razor.StateMachine&lt;TSymbol&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TReturn">TSymbol</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Razor.Tokenizer.ITokenizer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSymbol">The type for the language symbol.</typeparam>
    <typeparam name="TSymbolType">The enumeration type for the language symbol.</typeparam>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Tokenizer (System.Web.Razor.Text.ITextDocument source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.Razor.Text.ITextDocument source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.#ctor(System.Web.Razor.Text.ITextDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ITextDocument)" />
      <MemberSignature Language="F#" Value="new System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt; : System.Web.Razor.Text.ITextDocument -&gt; System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;" Usage="new System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt; source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Web.Razor.Text.ITextDocument" />
      </Parameters>
      <Docs>
        <param name="source">The source.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Initializes a new instance of the <see cref="T:System.Web.Razor.Tokenizer.Tokenizer`2" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterRazorCommentTransition">
      <MemberSignature Language="C#" Value="protected System.Web.Razor.StateMachine&lt;TSymbol&gt;.StateResult AfterRazorCommentTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Razor.StateMachine`1/StateResult&lt;!TSymbol&gt; AfterRazorCommentTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.AfterRazorCommentTransition" />
      <MemberSignature Language="VB.NET" Value="Protected Function AfterRazorCommentTransition () As StateMachine(Of TSymbol).StateResult" />
      <MemberSignature Language="F#" Value="member this.AfterRazorCommentTransition : unit -&gt; System.Web.Razor.StateMachine&lt;'Symbol (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.StateResult" Usage="tokenizer.AfterRazorCommentTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.StateMachine&lt;TSymbol&gt;+StateResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Returns a result after the razor comment transition.</summary>
        <returns>The result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="At">
      <MemberSignature Language="C#" Value="protected bool At (string expected, bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool At(string expected, bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.At(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function At (expected As String, caseSensitive As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="member this.At : string * bool -&gt; bool" Usage="tokenizer.At (expected, caseSensitive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expected">The string to check.</param>
        <param name="caseSensitive">true to indicate comparison is case sensitive; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the lookahead buffer contains the expected string.</summary>
        <returns>true if the lookahead buffer contains the expected string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.Buffer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Buffer As StringBuilder" />
      <MemberSignature Language="F#" Value="member this.Buffer : System.Text.StringBuilder" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets or sets the buffer for the tokenizer.</summary>
        <value>The buffer for the tokenizer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharOrWhiteSpace">
      <MemberSignature Language="C#" Value="protected Func&lt;char,bool&gt; CharOrWhiteSpace (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Func`2&lt;char, bool&gt; CharOrWhiteSpace(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.CharOrWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CharOrWhiteSpace (character As Char) As Func(Of Char, Boolean)" />
      <MemberSignature Language="F#" Value="member this.CharOrWhiteSpace : char -&gt; Func&lt;char, bool&gt;" Usage="tokenizer.CharOrWhiteSpace character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Char,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character">The character used to compare.</param>
        <summary>Returns a function delegate, that accepts a character parameter and returns a value that indicates whether the character parameter is equal to specified character or white space.</summary>
        <returns>A function delegate.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSymbol">
      <MemberSignature Language="C#" Value="protected abstract TSymbol CreateSymbol (System.Web.Razor.Text.SourceLocation start, string content, TSymbolType type, System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TSymbol CreateSymbol(valuetype System.Web.Razor.Text.SourceLocation start, string content, !TSymbolType type, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.CreateSymbol(System.Web.Razor.Text.SourceLocation,System.String,`1,System.Collections.Generic.IEnumerable{System.Web.Razor.Parser.SyntaxTree.RazorError})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateSymbol (start As SourceLocation, content As String, type As TSymbolType, errors As IEnumerable(Of RazorError)) As TSymbol" />
      <MemberSignature Language="F#" Value="abstract member CreateSymbol : System.Web.Razor.Text.SourceLocation * string * 'SymbolType * seq&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; -&gt; 'Symbol" Usage="tokenizer.CreateSymbol (start, content, type, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="type" Type="TSymbolType" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" />
      </Parameters>
      <Docs>
        <param name="start">The start of the source location.</param>
        <param name="content">The content value.</param>
        <param name="type">The symbol type.</param>
        <param name="errors">The razor error.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a language symbol type for the tokenizer with the specified content.</summary>
        <returns>A language symbol type for the tokenizer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCharacter">
      <MemberSignature Language="C#" Value="protected char CurrentCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char CurrentCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.CurrentCharacter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentCharacter As Char" />
      <MemberSignature Language="F#" Value="member this.CurrentCharacter : char" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.CurrentCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the current character in the tokenizer.</summary>
        <value>The current character.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentErrors">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; CurrentErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; CurrentErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.CurrentErrors" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentErrors As IList(Of RazorError)" />
      <MemberSignature Language="F#" Value="member this.CurrentErrors : System.Collections.Generic.IList&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.CurrentErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a list of the current razor errors.</summary>
        <value>A list of the current errors.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentLocation">
      <MemberSignature Language="C#" Value="protected System.Web.Razor.Text.SourceLocation CurrentLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Razor.Text.SourceLocation CurrentLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.CurrentLocation" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentLocation As SourceLocation" />
      <MemberSignature Language="F#" Value="member this.CurrentLocation : System.Web.Razor.Text.SourceLocation" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.CurrentLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Text.SourceLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the current source location.</summary>
        <value>The current source location.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStart">
      <MemberSignature Language="C#" Value="protected System.Web.Razor.Text.SourceLocation CurrentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Razor.Text.SourceLocation CurrentStart" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.CurrentStart" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentStart As SourceLocation" />
      <MemberSignature Language="F#" Value="member this.CurrentStart : System.Web.Razor.Text.SourceLocation" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.CurrentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Text.SourceLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the current start of the source location.</summary>
        <value>The current start of the source location.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfFile">
      <MemberSignature Language="C#" Value="protected bool EndOfFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.EndOfFile" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EndOfFile As Boolean" />
      <MemberSignature Language="F#" Value="member this.EndOfFile : bool" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.EndOfFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a value whether the tokenizer current location is at the end of the file.</summary>
        <value>true if the tokenizer current location is at the end of the file; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSymbol">
      <MemberSignature Language="C#" Value="protected TSymbol EndSymbol (TSymbolType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !TSymbol EndSymbol(!TSymbolType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.EndSymbol(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndSymbol (type As TSymbolType) As TSymbol" />
      <MemberSignature Language="F#" Value="member this.EndSymbol : 'SymbolType -&gt; 'Symbol" Usage="tokenizer.EndSymbol type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TSymbolType" />
      </Parameters>
      <Docs>
        <param name="type">The enumeration type for the language symbol.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Returns the language end symbol type used by the tokenizer.</summary>
        <returns>The language end symbol type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSymbol">
      <MemberSignature Language="C#" Value="protected TSymbol EndSymbol (System.Web.Razor.Text.SourceLocation start, TSymbolType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !TSymbol EndSymbol(valuetype System.Web.Razor.Text.SourceLocation start, !TSymbolType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.EndSymbol(System.Web.Razor.Text.SourceLocation,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndSymbol (start As SourceLocation, type As TSymbolType) As TSymbol" />
      <MemberSignature Language="F#" Value="member this.EndSymbol : System.Web.Razor.Text.SourceLocation * 'SymbolType -&gt; 'Symbol" Usage="tokenizer.EndSymbol (start, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="type" Type="TSymbolType" />
      </Parameters>
      <Docs>
        <param name="start">The start of the source location.</param>
        <param name="type">The enumeration type for the language symbol.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Returns the language end symbol type used by the tokenizer.</summary>
        <returns>The language end symbol type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HaveContent">
      <MemberSignature Language="C#" Value="protected bool HaveContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HaveContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.HaveContent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HaveContent As Boolean" />
      <MemberSignature Language="F#" Value="member this.HaveContent : bool" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.HaveContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a value whether the tokenizer have content.</summary>
        <value>true if the tokenizer have content; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="protected void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MoveNext ()" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="tokenizer.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Reads to the next character from the code reader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSymbol">
      <MemberSignature Language="C#" Value="public virtual TSymbol NextSymbol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TSymbol NextSymbol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.NextSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextSymbol () As TSymbol" />
      <MemberSignature Language="F#" Value="abstract member NextSymbol : unit -&gt; 'Symbol&#xA;override this.NextSymbol : unit -&gt; 'Symbol" Usage="tokenizer.NextSymbol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbol</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Shows the next symbol to be used.</summary>
        <returns>The next symbol to be used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="protected char Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance char Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.Peek" />
      <MemberSignature Language="VB.NET" Value="Protected Function Peek () As Char" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; char" Usage="tokenizer.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Reads the next symbol in the code.</summary>
        <returns>The next symbol to read.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RazorCommentBody">
      <MemberSignature Language="C#" Value="protected System.Web.Razor.StateMachine&lt;TSymbol&gt;.StateResult RazorCommentBody ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Razor.StateMachine`1/StateResult&lt;!TSymbol&gt; RazorCommentBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.RazorCommentBody" />
      <MemberSignature Language="VB.NET" Value="Protected Function RazorCommentBody () As StateMachine(Of TSymbol).StateResult" />
      <MemberSignature Language="F#" Value="member this.RazorCommentBody : unit -&gt; System.Web.Razor.StateMachine&lt;'Symbol (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.StateResult" Usage="tokenizer.RazorCommentBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.StateMachine&lt;TSymbol&gt;+StateResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the Razor comment body.</summary>
        <returns>The object that represent the state of the result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RazorCommentStarType">
      <MemberSignature Language="C#" Value="public abstract TSymbolType RazorCommentStarType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TSymbolType RazorCommentStarType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.RazorCommentStarType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RazorCommentStarType As TSymbolType" />
      <MemberSignature Language="F#" Value="member this.RazorCommentStarType : 'SymbolType" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.RazorCommentStarType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the star type for the razor comment.</summary>
        <value>The star type for the razor comment.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RazorCommentTransitionType">
      <MemberSignature Language="C#" Value="public abstract TSymbolType RazorCommentTransitionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TSymbolType RazorCommentTransitionType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.RazorCommentTransitionType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RazorCommentTransitionType As TSymbolType" />
      <MemberSignature Language="F#" Value="member this.RazorCommentTransitionType : 'SymbolType" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.RazorCommentTransitionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the transition type for the razor comment.</summary>
        <value>The transition type for the razor comment.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RazorCommentType">
      <MemberSignature Language="C#" Value="public abstract TSymbolType RazorCommentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TSymbolType RazorCommentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.RazorCommentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RazorCommentType As TSymbolType" />
      <MemberSignature Language="F#" Value="member this.RazorCommentType : 'SymbolType" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.RazorCommentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the type of razor comment.</summary>
        <value>The type of razor comment.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="tokenizer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Sets the tokenizer status to its initial state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeSymbol">
      <MemberSignature Language="C#" Value="protected void ResumeSymbol (TSymbol previous);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResumeSymbol(!TSymbol previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.ResumeSymbol(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResumeSymbol (previous As TSymbol)" />
      <MemberSignature Language="F#" Value="member this.ResumeSymbol : 'Symbol -&gt; unit" Usage="tokenizer.ResumeSymbol previous" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="TSymbol" />
      </Parameters>
      <Docs>
        <param name="previous">The previous language symbol type.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Resumes using the previous language symbol type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="protected TSymbol Single (TSymbolType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !TSymbol Single(!TSymbolType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.Single(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Function Single (type As TSymbolType) As TSymbol" />
      <MemberSignature Language="F#" Value="member this.Single : 'SymbolType -&gt; 'Symbol" Usage="tokenizer.Single type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSymbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TSymbolType" />
      </Parameters>
      <Docs>
        <param name="type">The type of symbol.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Uses a single type of symbol.</summary>
        <returns>A single type of symbol.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Text.TextDocumentReader Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Text.TextDocumentReader Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Tokenizer.Tokenizer`2.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As TextDocumentReader" />
      <MemberSignature Language="F#" Value="member this.Source : System.Web.Razor.Text.TextDocumentReader" Usage="System.Web.Razor.Tokenizer.Tokenizer&lt;'Symbol, 'SymbolType (requires 'Symbol :&gt; System.Web.Razor.Tokenizer.Symbols.SymbolBase&lt;'SymbolType&gt;)&gt;.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Text.TextDocumentReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the source of the text document.</summary>
        <value>The source of the source document.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSymbol">
      <MemberSignature Language="C#" Value="protected void StartSymbol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StartSymbol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.StartSymbol" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StartSymbol ()" />
      <MemberSignature Language="F#" Value="member this.StartSymbol : unit -&gt; unit" Usage="tokenizer.StartSymbol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Returns the start symbol used in this class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Razor.Tokenizer.ITokenizer.NextSymbol">
      <MemberSignature Language="C#" Value="System.Web.Razor.Tokenizer.Symbols.ISymbol ITokenizer.NextSymbol ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.Razor.Tokenizer.Symbols.ISymbol System.Web.Razor.Tokenizer.ITokenizer.NextSymbol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.System#Web#Razor#Tokenizer#ITokenizer#NextSymbol" />
      <MemberSignature Language="VB.NET" Value="Function NextSymbol () As ISymbol Implements ITokenizer.NextSymbol" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Razor.Tokenizer.ITokenizer.NextSymbol : unit -&gt; System.Web.Razor.Tokenizer.Symbols.ISymbol&#xA;override this.System.Web.Razor.Tokenizer.ITokenizer.NextSymbol : unit -&gt; System.Web.Razor.Tokenizer.Symbols.ISymbol" Usage="tokenizer.System.Web.Razor.Tokenizer.ITokenizer.NextSymbol " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Razor.Tokenizer.ITokenizer.NextSymbol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Tokenizer.Symbols.ISymbol</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Returns the next language symbol type.</summary>
        <returns>The next language symbol type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeAll">
      <MemberSignature Language="C#" Value="protected bool TakeAll (string expected, bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TakeAll(string expected, bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.TakeAll(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function TakeAll (expected As String, caseSensitive As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TakeAll : string * bool -&gt; bool" Usage="tokenizer.TakeAll (expected, caseSensitive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expected">The string to match.</param>
        <param name="caseSensitive">true to indicate comparison is case sensitive; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Takes the string if found in the lookahead buffer into the tokenizer buffer.</summary>
        <returns>true if the lookahead buffer contains the expected string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeCurrent">
      <MemberSignature Language="C#" Value="protected void TakeCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TakeCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.TakeCurrent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TakeCurrent ()" />
      <MemberSignature Language="F#" Value="member this.TakeCurrent : unit -&gt; unit" Usage="tokenizer.TakeCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Accepts the current character into the buffer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeString">
      <MemberSignature Language="C#" Value="protected bool TakeString (string input, bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TakeString(string input, bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.TakeString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function TakeString (input As String, caseSensitive As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TakeString : string * bool -&gt; bool" Usage="tokenizer.TakeString (input, caseSensitive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">The input string.</param>
        <param name="caseSensitive">true to indicate comparison is case sensitive; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Accepts the given input string into the buffer.</summary>
        <returns>true if the whole input string was accepted; false, if only a substring was accepted.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeUntil">
      <MemberSignature Language="C#" Value="protected bool TakeUntil (Func&lt;char,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TakeUntil(class System.Func`2&lt;char, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Tokenizer.Tokenizer`2.TakeUntil(System.Func{System.Char,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Function TakeUntil (predicate As Func(Of Char, Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TakeUntil : Func&lt;char, bool&gt; -&gt; bool" Usage="tokenizer.TakeUntil predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Char,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">The predicate that specifies the processing condition.</param>
        <summary>Parses the source document until the condition specified by predicate is met or end file is reached.</summary>
        <returns>true if the predicate condition is met; false if end of file is reached.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
