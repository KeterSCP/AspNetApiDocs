<Type Name="SyntaxTreeNode" FullName="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode">
  <TypeSignature Language="C#" Value="public abstract class SyntaxTreeNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SyntaxTreeNode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SyntaxTreeNode" />
  <TypeSignature Language="F#" Value="type SyntaxTreeNode = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Represents the node for the syntax tree.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyntaxTreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public abstract void Accept (System.Web.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Accept(class System.Web.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Accept(System.Web.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Accept (visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="abstract member Accept : System.Web.Razor.Parser.ParserVisitor -&gt; unit" Usage="syntaxTreeNode.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Web.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">The parser visitor.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Accepts the visitor of the tree node.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EquivalentTo">
      <MemberSignature Language="C#" Value="public abstract bool EquivalentTo (System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EquivalentTo(class System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.EquivalentTo(System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EquivalentTo (node As SyntaxTreeNode) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EquivalentTo : System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode -&gt; bool" Usage="syntaxTreeNode.EquivalentTo node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" />
      </Parameters>
      <Docs>
        <param name="node">The given node.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates whether the syntax tree node is equivalent to given node.</summary>
        <returns>true the syntax tree node is equivalent to given node; false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlock">
      <MemberSignature Language="C#" Value="public abstract bool IsBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.IsBlock" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsBlock As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsBlock : bool" Usage="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.IsBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a value that indicates whether the syntax tree node is a block-level object.</summary>
        <value>true if the syntax tree node is a block-level object; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Integer" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the length of the syntax tree node.</summary>
        <value>The length of the syntax tree node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Parser.SyntaxTree.Block Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.SyntaxTree.Block Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Block" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.Razor.Parser.SyntaxTree.Block" Usage="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.SyntaxTree.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the parent tree node of the current tree node.</summary>
        <value>The parent tree node of the current tree node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public abstract System.Web.Razor.Text.SourceLocation Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Razor.Text.SourceLocation Start" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Start" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Start As SourceLocation" />
      <MemberSignature Language="F#" Value="member this.Start : System.Web.Razor.Text.SourceLocation" Usage="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Text.SourceLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the specific source location for the syntax tree node.</summary>
        <value>The specific source location for the syntax tree node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
