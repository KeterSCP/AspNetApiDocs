<Type Name="Span" FullName="System.Web.Razor.Parser.SyntaxTree.Span">
  <TypeSignature Language="C#" Value="public class Span : System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Span extends System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.SyntaxTree.Span" />
  <TypeSignature Language="VB.NET" Value="Public Class Span&#xA;Inherits SyntaxTreeNode" />
  <TypeSignature Language="F#" Value="type Span = class&#xA;    inherit SyntaxTreeNode" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Represents a Razor parse tree node that contains the all the content of a block node.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Span (System.Web.Razor.Parser.SyntaxTree.SpanBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Razor.Parser.SyntaxTree.SpanBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.#ctor(System.Web.Razor.Parser.SyntaxTree.SpanBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As SpanBuilder)" />
      <MemberSignature Language="F#" Value="new System.Web.Razor.Parser.SyntaxTree.Span : System.Web.Razor.Parser.SyntaxTree.SpanBuilder -&gt; System.Web.Razor.Parser.SyntaxTree.Span" Usage="new System.Web.Razor.Parser.SyntaxTree.Span builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.Razor.Parser.SyntaxTree.SpanBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The builder to use for this span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.SyntaxTree.Span" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Web.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Web.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.Accept(System.Web.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Web.Razor.Parser.ParserVisitor -&gt; unit" Usage="span.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Web.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">The object that performs the visit.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Accepts visit from the specified visitor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public void Change (Action&lt;System.Web.Razor.Parser.SyntaxTree.SpanBuilder&gt; changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Change(class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.SpanBuilder&gt; changes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.Change(System.Action{System.Web.Razor.Parser.SyntaxTree.SpanBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Change (changes As Action(Of SpanBuilder))" />
      <MemberSignature Language="F#" Value="member this.Change : Action&lt;System.Web.Razor.Parser.SyntaxTree.SpanBuilder&gt; -&gt; unit" Usage="span.Change changes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changes" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.SpanBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="changes">A delegate that will be executed along with this change.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Changes the span builder for this span.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeStart">
      <MemberSignature Language="C#" Value="public void ChangeStart (System.Web.Razor.Text.SourceLocation newStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeStart(valuetype System.Web.Razor.Text.SourceLocation newStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.ChangeStart(System.Web.Razor.Text.SourceLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeStart (newStart As SourceLocation)" />
      <MemberSignature Language="F#" Value="member this.ChangeStart : System.Web.Razor.Text.SourceLocation -&gt; unit" Usage="span.ChangeStart newStart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Web.Razor.Text.SourceLocation" />
      </Parameters>
      <Docs>
        <param name="newStart">The new start location to set for this span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Sets the start character location of this span.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeGenerator">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Generator.ISpanCodeGenerator CodeGenerator { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Generator.ISpanCodeGenerator CodeGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.CodeGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeGenerator As ISpanCodeGenerator" />
      <MemberSignature Language="F#" Value="member this.CodeGenerator : System.Web.Razor.Generator.ISpanCodeGenerator with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.CodeGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Generator.ISpanCodeGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the code generator for the span.</summary>
        <value>The code generator for the span.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public string Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As String" />
      <MemberSignature Language="F#" Value="member this.Content : string" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the content of the span.</summary>
        <value>The content of the span.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditHandler">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Editor.SpanEditHandler EditHandler { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Editor.SpanEditHandler EditHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.EditHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property EditHandler As SpanEditHandler" />
      <MemberSignature Language="F#" Value="member this.EditHandler : System.Web.Razor.Editor.SpanEditHandler with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.EditHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Editor.SpanEditHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the handler for span edits.</summary>
        <value>The handler for span edits.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="span.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare to this span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Determines whether the specified object is equal to this span.</summary>
        <returns>true if the specified object is equal to this span; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EquivalentTo">
      <MemberSignature Language="C#" Value="public override bool EquivalentTo (System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool EquivalentTo(class System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.EquivalentTo(System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EquivalentTo (node As SyntaxTreeNode) As Boolean" />
      <MemberSignature Language="F#" Value="override this.EquivalentTo : System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode -&gt; bool" Usage="span.EquivalentTo node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.Razor.Parser.SyntaxTree.SyntaxTreeNode" />
      </Parameters>
      <Docs>
        <param name="node">The node to compare with this span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Determines whether the specified node is equivalent to this span.</summary>
        <returns>true if the specified node is equal to this span; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="span.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Returns the hash code for this current span.</summary>
        <returns>The hash code for this current span.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlock">
      <MemberSignature Language="C#" Value="public override bool IsBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.IsBlock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBlock As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsBlock : bool" Usage="System.Web.Razor.Parser.SyntaxTree.Span.IsBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets a value that indicates whether this node is a block node.</summary>
        <value>false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Parser.SyntaxTree.SpanKind Kind { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Razor.Parser.SyntaxTree.SpanKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Kind" />
      <MemberSignature Language="VB.NET" Value="Public Property Kind As SpanKind" />
      <MemberSignature Language="F#" Value="member this.Kind : System.Web.Razor.Parser.SyntaxTree.SpanKind with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.SyntaxTree.SpanKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the kind for this span.</summary>
        <value>One of the values of the <see cref="T:System.Web.Razor.Parser.SyntaxTree.SpanKind" /> enumeration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Integer" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the length of the span content.</summary>
        <value>The length of the span content.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Parser.SyntaxTree.Span Next { get; protected internal set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.SyntaxTree.Span Next" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Next" />
      <MemberSignature Language="VB.NET" Value="Public Property Next As Span" />
      <MemberSignature Language="F#" Value="member this.Next : System.Web.Razor.Parser.SyntaxTree.Span with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.SyntaxTree.Span</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the next span in the tree node.</summary>
        <value>The next span in the tree node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public System.Web.Razor.Parser.SyntaxTree.Span Previous { get; protected internal set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.SyntaxTree.Span Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Previous" />
      <MemberSignature Language="VB.NET" Value="Public Property Previous As Span" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Razor.Parser.SyntaxTree.Span with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.SyntaxTree.Span</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the previous span in the tree node.</summary>
        <value>The previous span in the tree node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceWith">
      <MemberSignature Language="C#" Value="public void ReplaceWith (System.Web.Razor.Parser.SyntaxTree.SpanBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceWith(class System.Web.Razor.Parser.SyntaxTree.SpanBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.ReplaceWith(System.Web.Razor.Parser.SyntaxTree.SpanBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceWith (builder As SpanBuilder)" />
      <MemberSignature Language="F#" Value="member this.ReplaceWith : System.Web.Razor.Parser.SyntaxTree.SpanBuilder -&gt; unit" Usage="span.ReplaceWith builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.Razor.Parser.SyntaxTree.SpanBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The new builder to use for this span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Replaces the span builder for this span with the specified span builder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public override System.Web.Razor.Text.SourceLocation Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Razor.Text.SourceLocation Start" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Start" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Start As SourceLocation" />
      <MemberSignature Language="F#" Value="member this.Start : System.Web.Razor.Text.SourceLocation" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Text.SourceLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the start character location of the span.</summary>
        <value>The start character location of the span.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Symbols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Tokenizer.Symbols.ISymbol&gt; Symbols { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Razor.Tokenizer.Symbols.ISymbol&gt; Symbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.SyntaxTree.Span.Symbols" />
      <MemberSignature Language="VB.NET" Value="Public Property Symbols As IEnumerable(Of ISymbol)" />
      <MemberSignature Language="F#" Value="member this.Symbols : seq&lt;System.Web.Razor.Tokenizer.Symbols.ISymbol&gt; with get, set" Usage="System.Web.Razor.Parser.SyntaxTree.Span.Symbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Tokenizer.Symbols.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the symbols used to generate the code for the span.</summary>
        <value>The symbols used to generate the code for the span.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.SyntaxTree.Span.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="span.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Returns the string representation of this current span.</summary>
        <returns>The string representation of this current span.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
