<Type Name="RequestFieldValidatorBase" FullName="System.Web.WebPages.RequestFieldValidatorBase">
  <TypeSignature Language="C#" Value="public abstract class RequestFieldValidatorBase : System.Web.WebPages.IValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RequestFieldValidatorBase extends System.Object implements class System.Web.WebPages.IValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebPages.RequestFieldValidatorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RequestFieldValidatorBase&#xA;Implements IValidator" />
  <TypeSignature Language="F#" Value="type RequestFieldValidatorBase = class&#xA;    interface IValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.WebPages.IValidator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Serves as the abstract base class for the validation helper classes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestFieldValidatorBase (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (errorMessage As String)" />
      <MemberSignature Language="F#" Value="new System.Web.WebPages.RequestFieldValidatorBase : string -&gt; System.Web.WebPages.RequestFieldValidatorBase" Usage="new System.Web.WebPages.RequestFieldValidatorBase errorMessage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The name (value of the name attribute) of the user input element to validate.</param>
        <summary>Initializes a new instance of the derived class and specifies the name of the HTML element that is being validated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestFieldValidatorBase (string errorMessage, bool useUnvalidatedValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string errorMessage, bool useUnvalidatedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (errorMessage As String, useUnvalidatedValues As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Web.WebPages.RequestFieldValidatorBase : string * bool -&gt; System.Web.WebPages.RequestFieldValidatorBase" Usage="new System.Web.WebPages.RequestFieldValidatorBase (errorMessage, useUnvalidatedValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="useUnvalidatedValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message.</param>
        <param name="useUnvalidatedValues">true to use unvalidated user input; false to reject unvalidated data. This parameter is set to true by calling methods in circumstances when the actual value of the user input is not important, such as for required fields.</param>
        <summary>Initializes a new instance of the derived class, registers the specified string as the error message to display if no value is supplied, and specifies whether the method can use unvalidated data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientValidationRule">
      <MemberSignature Language="C#" Value="public virtual System.Web.Mvc.ModelClientValidationRule ClientValidationRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ModelClientValidationRule ClientValidationRule" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientValidationRule As ModelClientValidationRule" />
      <MemberSignature Language="F#" Value="member this.ClientValidationRule : System.Web.Mvc.ModelClientValidationRule" Usage="System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.WebPages.IValidator.ClientValidationRule</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ModelClientValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a container for client validation for the required field.</summary>
        <value>The container.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpContext">
      <MemberSignature Language="C#" Value="protected static System.Web.HttpContextBase GetHttpContext (System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Web.HttpContextBase GetHttpContext(class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetHttpContext (validationContext As ValidationContext) As HttpContextBase" />
      <MemberSignature Language="F#" Value="static member GetHttpContext : System.ComponentModel.DataAnnotations.ValidationContext -&gt; System.Web.HttpContextBase" Usage="System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContextBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">The validation context.</param>
        <summary>Returns the HTTP context of the current request.</summary>
        <returns>The context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestValue">
      <MemberSignature Language="C#" Value="protected string GetRequestValue (System.Web.HttpRequestBase request, string field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetRequestValue(class System.Web.HttpRequestBase request, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRequestValue (request As HttpRequestBase, field As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetRequestValue : System.Web.HttpRequestBase * string -&gt; string" Usage="requestFieldValidatorBase.GetRequestValue (request, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="request">The current request.</param>
        <param name="field">The name of the field from the current request to validate.</param>
        <summary>Returns the value to validate.</summary>
        <returns>The value to validate.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="protected abstract bool IsValid (System.Web.HttpContextBase httpContext, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValid(class System.Web.HttpContextBase httpContext, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsValid (httpContext As HttpContextBase, value As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.Web.HttpContextBase * string -&gt; bool" Usage="requestFieldValidatorBase.IsValid (httpContext, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpContext">The current context.</param>
        <param name="value">The value to validate.</param>
        <summary>Returns a value that indicates whether the specified value is valid.</summary>
        <returns>true if the value is valid; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.DataAnnotations.ValidationResult Validate (System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.DataAnnotations.ValidationResult Validate(class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (validationContext As ValidationContext) As ValidationResult" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ComponentModel.DataAnnotations.ValidationContext -&gt; System.ComponentModel.DataAnnotations.ValidationResult&#xA;override this.Validate : System.ComponentModel.DataAnnotations.ValidationContext -&gt; System.ComponentModel.DataAnnotations.ValidationResult" Usage="requestFieldValidatorBase.Validate validationContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">The context.</param>
        <summary>Performs the validation test.</summary>
        <returns>The result of the validation test.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
