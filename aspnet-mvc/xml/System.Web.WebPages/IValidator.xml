<Type Name="IValidator" FullName="System.Web.WebPages.IValidator">
  <TypeSignature Language="C#" Value="public interface IValidator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebPages.IValidator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValidator" />
  <TypeSignature Language="F#" Value="type IValidator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Defines the properties and methods that objects that participate in webpages.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientValidationRule">
      <MemberSignature Language="C#" Value="public System.Web.Mvc.ModelClientValidationRule ClientValidationRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ModelClientValidationRule ClientValidationRule" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.IValidator.ClientValidationRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientValidationRule As ModelClientValidationRule" />
      <MemberSignature Language="F#" Value="member this.ClientValidationRule : System.Web.Mvc.ModelClientValidationRule" Usage="System.Web.WebPages.IValidator.ClientValidationRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ModelClientValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a container for client validation for the required field.</summary>
        <value>A container for client validation for the required field.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.ValidationResult Validate (System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.DataAnnotations.ValidationResult Validate(class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (validationContext As ValidationContext) As ValidationResult" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ComponentModel.DataAnnotations.ValidationContext -&gt; System.ComponentModel.DataAnnotations.ValidationResult" Usage="iValidator.Validate validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">The validation context.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Evaluates the condition it checks and updates the validation context.</summary>
        <returns>The condition it checks and updates the validation context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
