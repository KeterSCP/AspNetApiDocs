<Type Name="CodeGeneratorContext" FullName="System.Web.Razor.Generator.CodeGeneratorContext">
  <TypeSignature Language="C#" Value="public class CodeGeneratorContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeGeneratorContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Generator.CodeGeneratorContext" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeGeneratorContext" />
  <TypeSignature Language="F#" Value="type CodeGeneratorContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Represents the context of the code generator.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCodeMapping">
      <MemberSignature Language="C#" Value="public int AddCodeMapping (System.Web.Razor.Text.SourceLocation sourceLocation, int generatedCodeStart, int generatedCodeLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddCodeMapping(valuetype System.Web.Razor.Text.SourceLocation sourceLocation, int32 generatedCodeStart, int32 generatedCodeLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.AddCodeMapping(System.Web.Razor.Text.SourceLocation,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCodeMapping (sourceLocation As SourceLocation, generatedCodeStart As Integer, generatedCodeLength As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.AddCodeMapping : System.Web.Razor.Text.SourceLocation * int * int -&gt; int" Usage="codeGeneratorContext.AddCodeMapping (sourceLocation, generatedCodeStart, generatedCodeLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="generatedCodeStart" Type="System.Int32" />
        <Parameter Name="generatedCodeLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">The source location of the generated code mapping.</param>
        <param name="generatedCodeStart">The code start of the generated code mapping.</param>
        <param name="generatedCodeLength">The length of the generated code mapping.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds a new generated code mapping to the collection.</summary>
        <returns>The collection index of the newly added code mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContextCall">
      <MemberSignature Language="C#" Value="public void AddContextCall (System.Web.Razor.Parser.SyntaxTree.Span contentSpan, string methodName, bool isLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContextCall(class System.Web.Razor.Parser.SyntaxTree.Span contentSpan, string methodName, bool isLiteral) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.AddContextCall(System.Web.Razor.Parser.SyntaxTree.Span,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContextCall (contentSpan As Span, methodName As String, isLiteral As Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddContextCall : System.Web.Razor.Parser.SyntaxTree.Span * string * bool -&gt; unit" Usage="codeGeneratorContext.AddContextCall (contentSpan, methodName, isLiteral)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentSpan" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="isLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="contentSpan">The content span.</param>
        <param name="methodName">The name of the method to invoke a context call.</param>
        <param name="isLiteral">true to specify that the method parameter is literal; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds a code statement for a context call on the specified method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDesignTimeHelperStatement">
      <MemberSignature Language="C#" Value="public void AddDesignTimeHelperStatement (System.CodeDom.CodeSnippetStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDesignTimeHelperStatement(class System.CodeDom.CodeSnippetStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.AddDesignTimeHelperStatement(System.CodeDom.CodeSnippetStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDesignTimeHelperStatement (statement As CodeSnippetStatement)" />
      <MemberSignature Language="F#" Value="member this.AddDesignTimeHelperStatement : System.CodeDom.CodeSnippetStatement -&gt; unit" Usage="codeGeneratorContext.AddDesignTimeHelperStatement statement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeSnippetStatement" />
      </Parameters>
      <Docs>
        <param name="statement">The code statement that receives the code insertion.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds a code statement that inserts the Razor design time helpers method in the specified code statement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStatement">
      <MemberSignature Language="C#" Value="public void AddStatement (string generatedCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStatement(string generatedCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.AddStatement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStatement (generatedCode As String)" />
      <MemberSignature Language="F#" Value="member this.AddStatement : string -&gt; unit" Usage="codeGeneratorContext.AddStatement generatedCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatedCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="generatedCode">The code statement to add the target method.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds the specified code statement to the body of the target method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStatement">
      <MemberSignature Language="C#" Value="public void AddStatement (string body, System.CodeDom.CodeLinePragma pragma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStatement(string body, class System.CodeDom.CodeLinePragma pragma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.AddStatement(System.String,System.CodeDom.CodeLinePragma)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStatement (body As String, pragma As CodeLinePragma)" />
      <MemberSignature Language="F#" Value="member this.AddStatement : string * System.CodeDom.CodeLinePragma -&gt; unit" Usage="codeGeneratorContext.AddStatement (body, pragma)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="pragma" Type="System.CodeDom.CodeLinePragma" />
      </Parameters>
      <Docs>
        <param name="body">The code statement to add the target method.</param>
        <param name="pragma">The line pragma.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds the specified code statement to the body of the target method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferStatementFragment">
      <MemberSignature Language="C#" Value="public void BufferStatementFragment (string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BufferStatementFragment(string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.BufferStatementFragment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BufferStatementFragment (fragment As String)" />
      <MemberSignature Language="F#" Value="member this.BufferStatementFragment : string -&gt; unit" Usage="codeGeneratorContext.BufferStatementFragment fragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fragment">The fragment to add.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Appends the specified fragment to the current buffered statement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferStatementFragment">
      <MemberSignature Language="C#" Value="public void BufferStatementFragment (System.Web.Razor.Parser.SyntaxTree.Span sourceSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BufferStatementFragment(class System.Web.Razor.Parser.SyntaxTree.Span sourceSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.BufferStatementFragment(System.Web.Razor.Parser.SyntaxTree.Span)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BufferStatementFragment (sourceSpan As Span)" />
      <MemberSignature Language="F#" Value="member this.BufferStatementFragment : System.Web.Razor.Parser.SyntaxTree.Span -&gt; unit" Usage="codeGeneratorContext.BufferStatementFragment sourceSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSpan" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
      </Parameters>
      <Docs>
        <param name="sourceSpan">The source span whose content is to be added.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Appends the content of the span to the current buffered statement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferStatementFragment">
      <MemberSignature Language="C#" Value="public void BufferStatementFragment (string fragment, System.Web.Razor.Parser.SyntaxTree.Span sourceSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BufferStatementFragment(string fragment, class System.Web.Razor.Parser.SyntaxTree.Span sourceSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.BufferStatementFragment(System.String,System.Web.Razor.Parser.SyntaxTree.Span)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BufferStatementFragment (fragment As String, sourceSpan As Span)" />
      <MemberSignature Language="F#" Value="member this.BufferStatementFragment : string * System.Web.Razor.Parser.SyntaxTree.Span -&gt; unit" Usage="codeGeneratorContext.BufferStatementFragment (fragment, sourceSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.String" />
        <Parameter Name="sourceSpan" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
      </Parameters>
      <Docs>
        <param name="fragment">The fragment to add.</param>
        <param name="sourceSpan">The source span for the <paramref name="fragment" />.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Appends the specified fragment to the current buffered statement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeStatementCollector">
      <MemberSignature Language="C#" Value="public IDisposable ChangeStatementCollector (Action&lt;string,System.CodeDom.CodeLinePragma&gt; collector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable ChangeStatementCollector(class System.Action`2&lt;string, class System.CodeDom.CodeLinePragma&gt; collector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.ChangeStatementCollector(System.Action{System.String,System.CodeDom.CodeLinePragma})" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeStatementCollector (collector As Action(Of String, CodeLinePragma)) As IDisposable" />
      <MemberSignature Language="F#" Value="member this.ChangeStatementCollector : Action&lt;string, System.CodeDom.CodeLinePragma&gt; -&gt; IDisposable" Usage="codeGeneratorContext.ChangeStatementCollector collector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collector" Type="System.Action&lt;System.String,System.CodeDom.CodeLinePragma&gt;" />
      </Parameters>
      <Docs>
        <param name="collector">The new statement collector.</param>
        <summary>Assigns a new statement collector and returns a disposable action that restores the old statement collector.</summary>
        <returns>A disposable action that restores the old statement collector.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;int,System.Web.Razor.Generator.GeneratedCodeMapping&gt; CodeMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;int32, valuetype System.Web.Razor.Generator.GeneratedCodeMapping&gt; CodeMappings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.CodeMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeMappings As IDictionary(Of Integer, GeneratedCodeMapping)" />
      <MemberSignature Language="F#" Value="member this.CodeMappings : System.Collections.Generic.IDictionary&lt;int, System.Web.Razor.Generator.GeneratedCodeMapping&gt;" Usage="System.Web.Razor.Generator.CodeGeneratorContext.CodeMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Int32,System.Web.Razor.Generator.GeneratedCodeMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the dictionary collection of generated code mapping.</summary>
        <value>The dictionary collection of generated code mapping.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit CompileUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCompileUnit CompileUnit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.CompileUnit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompileUnit As CodeCompileUnit" />
      <MemberSignature Language="F#" Value="member this.CompileUnit : System.CodeDom.CodeCompileUnit" Usage="System.Web.Razor.Generator.CodeGeneratorContext.CompileUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the code compile unit that will hold the program graph.</summary>
        <value>The code compile unit that will hold the program graph.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Razor.Generator.CodeGeneratorContext Create (System.Web.Razor.RazorEngineHost host, string className, string rootNamespace, string sourceFile, bool shouldGenerateLinePragmas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Razor.Generator.CodeGeneratorContext Create(class System.Web.Razor.RazorEngineHost host, string className, string rootNamespace, string sourceFile, bool shouldGenerateLinePragmas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.Create(System.Web.Razor.RazorEngineHost,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (host As RazorEngineHost, className As String, rootNamespace As String, sourceFile As String, shouldGenerateLinePragmas As Boolean) As CodeGeneratorContext" />
      <MemberSignature Language="F#" Value="static member Create : System.Web.Razor.RazorEngineHost * string * string * string * bool -&gt; System.Web.Razor.Generator.CodeGeneratorContext" Usage="System.Web.Razor.Generator.CodeGeneratorContext.Create (host, className, rootNamespace, sourceFile, shouldGenerateLinePragmas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Generator.CodeGeneratorContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Web.Razor.RazorEngineHost" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFile" Type="System.String" />
        <Parameter Name="shouldGenerateLinePragmas" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="host">The Razor engine host.</param>
        <param name="className">The class name for the generated class type declaration.</param>
        <param name="rootNamespace">The name for the generated namespace declaration.</param>
        <param name="sourceFile">The source file.</param>
        <param name="shouldGenerateLinePragmas">true to enable the generation of line pragmas; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Creates a new instance of the <see cref="T:System.Web.Razor.Generator.CodeGeneratorContext" /> class.</summary>
        <returns>The newly created instance of the code generator context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentBufferedStatement">
      <MemberSignature Language="C#" Value="public string CurrentBufferedStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentBufferedStatement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.CurrentBufferedStatement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentBufferedStatement As String" />
      <MemberSignature Language="F#" Value="member this.CurrentBufferedStatement : string" Usage="System.Web.Razor.Generator.CodeGeneratorContext.CurrentBufferedStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets the current buffered statement.</summary>
        <value>The current buffered statement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureExpressionHelperVariable">
      <MemberSignature Language="C#" Value="public void EnsureExpressionHelperVariable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureExpressionHelperVariable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.EnsureExpressionHelperVariable" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureExpressionHelperVariable ()" />
      <MemberSignature Language="F#" Value="member this.EnsureExpressionHelperVariable : unit -&gt; unit" Usage="codeGeneratorContext.EnsureExpressionHelperVariable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Adds the expression helper variable to the generated class if not yet added,</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushBufferedStatement">
      <MemberSignature Language="C#" Value="public void FlushBufferedStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushBufferedStatement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.FlushBufferedStatement" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushBufferedStatement ()" />
      <MemberSignature Language="F#" Value="member this.FlushBufferedStatement : unit -&gt; unit" Usage="codeGeneratorContext.FlushBufferedStatement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Flushes the current buffered statement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedClass">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration GeneratedClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration GeneratedClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.GeneratedClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GeneratedClass As CodeTypeDeclaration" />
      <MemberSignature Language="F#" Value="member this.GeneratedClass : System.CodeDom.CodeTypeDeclaration" Usage="System.Web.Razor.Generator.CodeGeneratorContext.GeneratedClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the generated class type declaration.</summary>
        <value>The generated class type declaration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma GenerateLinePragma (System.Web.Razor.Parser.SyntaxTree.Span target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeLinePragma GenerateLinePragma(class System.Web.Razor.Parser.SyntaxTree.Span target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.GenerateLinePragma(System.Web.Razor.Parser.SyntaxTree.Span)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLinePragma (target As Span) As CodeLinePragma" />
      <MemberSignature Language="F#" Value="member this.GenerateLinePragma : System.Web.Razor.Parser.SyntaxTree.Span -&gt; System.CodeDom.CodeLinePragma" Usage="codeGeneratorContext.GenerateLinePragma target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
      </Parameters>
      <Docs>
        <param name="target">The source span.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Generates the line pragma for the specified source.</summary>
        <returns>The line pragma for the specified source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma GenerateLinePragma (System.Web.Razor.Parser.SyntaxTree.Span target, int generatedCodeStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeLinePragma GenerateLinePragma(class System.Web.Razor.Parser.SyntaxTree.Span target, int32 generatedCodeStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.GenerateLinePragma(System.Web.Razor.Parser.SyntaxTree.Span,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLinePragma (target As Span, generatedCodeStart As Integer) As CodeLinePragma" />
      <MemberSignature Language="F#" Value="member this.GenerateLinePragma : System.Web.Razor.Parser.SyntaxTree.Span * int -&gt; System.CodeDom.CodeLinePragma" Usage="codeGeneratorContext.GenerateLinePragma (target, generatedCodeStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
        <Parameter Name="generatedCodeStart" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">The source span.</param>
        <param name="generatedCodeStart">The start index of code.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Generates the line pragma for the source.</summary>
        <returns>The line pragma for the specified source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma GenerateLinePragma (System.Web.Razor.Parser.SyntaxTree.Span target, int generatedCodeStart, int codeLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeLinePragma GenerateLinePragma(class System.Web.Razor.Parser.SyntaxTree.Span target, int32 generatedCodeStart, int32 codeLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.GenerateLinePragma(System.Web.Razor.Parser.SyntaxTree.Span,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLinePragma (target As Span, generatedCodeStart As Integer, codeLength As Integer) As CodeLinePragma" />
      <MemberSignature Language="F#" Value="member this.GenerateLinePragma : System.Web.Razor.Parser.SyntaxTree.Span * int * int -&gt; System.CodeDom.CodeLinePragma" Usage="codeGeneratorContext.GenerateLinePragma (target, generatedCodeStart, codeLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Web.Razor.Parser.SyntaxTree.Span" />
        <Parameter Name="generatedCodeStart" Type="System.Int32" />
        <Parameter Name="codeLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">The source span.</param>
        <param name="generatedCodeStart">The start index of code.</param>
        <param name="codeLength">The length of code.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Generates the line pragma for the source.</summary>
        <returns>The line pragma for the specified source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma GenerateLinePragma (System.Web.Razor.Text.SourceLocation start, int generatedCodeStart, int codeLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeLinePragma GenerateLinePragma(valuetype System.Web.Razor.Text.SourceLocation start, int32 generatedCodeStart, int32 codeLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.GenerateLinePragma(System.Web.Razor.Text.SourceLocation,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLinePragma (start As SourceLocation, generatedCodeStart As Integer, codeLength As Integer) As CodeLinePragma" />
      <MemberSignature Language="F#" Value="member this.GenerateLinePragma : System.Web.Razor.Text.SourceLocation * int * int -&gt; System.CodeDom.CodeLinePragma" Usage="codeGeneratorContext.GenerateLinePragma (start, generatedCodeStart, codeLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="generatedCodeStart" Type="System.Int32" />
        <Parameter Name="codeLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The source location.</param>
        <param name="generatedCodeStart">The start index of code.</param>
        <param name="codeLength">The length of code.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Generates the line pragma for the source.</summary>
        <returns>The line pragma for the specified source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.Web.Razor.RazorEngineHost Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.RazorEngineHost Host" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As RazorEngineHost" />
      <MemberSignature Language="F#" Value="member this.Host : System.Web.Razor.RazorEngineHost" Usage="System.Web.Razor.Generator.CodeGeneratorContext.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.RazorEngineHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the Razor engine host.</summary>
        <value>The Razor engine host.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkEndOfGeneratedCode">
      <MemberSignature Language="C#" Value="public void MarkEndOfGeneratedCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkEndOfGeneratedCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.MarkEndOfGeneratedCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkEndOfGeneratedCode ()" />
      <MemberSignature Language="F#" Value="member this.MarkEndOfGeneratedCode : unit -&gt; unit" Usage="codeGeneratorContext.MarkEndOfGeneratedCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Marks the end of generated code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkStartOfGeneratedCode">
      <MemberSignature Language="C#" Value="public void MarkStartOfGeneratedCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkStartOfGeneratedCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Generator.CodeGeneratorContext.MarkStartOfGeneratedCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkStartOfGeneratedCode ()" />
      <MemberSignature Language="F#" Value="member this.MarkStartOfGeneratedCode : unit -&gt; unit" Usage="codeGeneratorContext.MarkStartOfGeneratedCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Marks the start of generated code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeNamespace Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeNamespace Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As CodeNamespace" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.CodeDom.CodeNamespace" Usage="System.Web.Razor.Generator.CodeGeneratorContext.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the generated namespace declaration.</summary>
        <value>The generated namespace declaration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceFile">
      <MemberSignature Language="C#" Value="public string SourceFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.SourceFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceFile As String" />
      <MemberSignature Language="F#" Value="member this.SourceFile : string" Usage="System.Web.Razor.Generator.CodeGeneratorContext.SourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the source file.</summary>
        <value>The source file.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetMethod">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeMemberMethod TargetMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeMemberMethod TargetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.TargetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetMethod As CodeMemberMethod" />
      <MemberSignature Language="F#" Value="member this.TargetMethod : System.CodeDom.CodeMemberMethod with get, set" Usage="System.Web.Razor.Generator.CodeGeneratorContext.TargetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the generated member method.</summary>
        <value>The generated member method.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetWriterName">
      <MemberSignature Language="C#" Value="public string TargetWriterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetWriterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Generator.CodeGeneratorContext.TargetWriterName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetWriterName As String" />
      <MemberSignature Language="F#" Value="member this.TargetWriterName : string with get, set" Usage="System.Web.Razor.Generator.CodeGeneratorContext.TargetWriterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets or sets the name of text writer.</summary>
        <value>The name of text writer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
