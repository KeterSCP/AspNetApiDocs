<Type Name="ScopeStorageDictionary" FullName="System.Web.WebPages.Scope.ScopeStorageDictionary">
  <TypeSignature Language="C#" Value="public class ScopeStorageDictionary : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;object,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;object,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;object,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScopeStorageDictionary extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;object, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Class ScopeStorageDictionary&#xA;Implements ICollection(Of KeyValuePair(Of Object, Object)), IDictionary(Of Object, Object), IEnumerable(Of KeyValuePair(Of Object, Object))" />
  <TypeSignature Language="F#" Value="type ScopeStorageDictionary = class&#xA;    interface IDictionary&lt;obj, obj&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;obj, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;obj, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a collection of keys and values that are used to store data at different scope levels (local, global, and so on).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScopeStorageDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScopeStorageDictionary (System.Collections.Generic.IDictionary&lt;object,object&gt; baseScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;object, object&gt; baseScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseScope As IDictionary(Of Object, Object))" />
      <MemberSignature Language="F#" Value="new System.Web.WebPages.Scope.ScopeStorageDictionary : System.Collections.Generic.IDictionary&lt;obj, obj&gt; -&gt; System.Web.WebPages.Scope.ScopeStorageDictionary" Usage="new System.Web.WebPages.Scope.ScopeStorageDictionary baseScope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseScope" Type="System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="baseScope">The base scope.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> class using the specified base scope.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Collections.Generic.KeyValuePair&lt;object,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (item As KeyValuePair(Of Object, Object))" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; unit" Usage="scopeStorageDictionary.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The key/value pair.</param>
        <summary>Adds a key/value pair to the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object using the specified generic collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="scopeStorageDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <param name="value">The value.</param>
        <summary>Adds the specified key and specified value to the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackingStore">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;object,object&gt; BackingStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, object&gt; BackingStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BackingStore As IDictionary(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.BackingStore : System.Collections.Generic.IDictionary&lt;obj, obj&gt;" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the dictionary that stores the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseScope">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;object,object&gt; BaseScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, object&gt; BaseScope" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BaseScope As IDictionary(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.BaseScope : System.Collections.Generic.IDictionary&lt;obj, obj&gt;" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the base scope for the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object.</summary>
        <value>The base scope for the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="scopeStorageDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all keys and values from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Collections.Generic.KeyValuePair&lt;object,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As KeyValuePair(Of Object, Object)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; bool" Usage="scopeStorageDictionary.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The key/value pair.</param>
        <summary>Returns a value that indicates whether the specified key/value pair exists in either the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object or in the <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> object.</summary>
        <returns>true if the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object or the <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> object contains an element that has the specified key/value pair; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="scopeStorageDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <summary>Returns a value that indicates whether the specified key exists in the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object or in the <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> object.</summary>
        <returns>true if the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object or the <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> object contains an element that has the specified key; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (System.Collections.Generic.KeyValuePair&lt;object,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As KeyValuePair(Of Object, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;[] * int -&gt; unit" Usage="scopeStorageDictionary.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array.</param>
        <param name="arrayIndex">The zero-based index in <paramref name="array" />.</param>
        <summary>Copies all of the elements in the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object and the <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> object to an <see cref="T:System.Array" /> object, starting at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of key/value pairs that are in the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <value>The number of key/value pairs.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;object,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of Object, Object))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;&gt;" Usage="scopeStorageDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to iterate through concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerator" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;object,object&gt;&gt; GetItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt;&gt; GetItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItems () As IEnumerable(Of KeyValuePair(Of Object, Object))" />
      <MemberSignature Language="F#" Value="abstract member GetItems : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;&gt;&#xA;override this.GetItems : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;obj, obj&gt;&gt;" Usage="scopeStorageDictionary.GetItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to iterate through the distinct elements of concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>An enumerator that contains distinct elements from the concatenated dictionary objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object is read-only.</summary>
        <value>true if the <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> object is read-only; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>Gets or sets the element that is associated with the specified key.</summary>
        <value>The element that has the specified key.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;object&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Collections.Generic.List`1" /> object that contains the keys from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <value>An object that contains that contains the keys.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual bool Remove (System.Collections.Generic.KeyValuePair&lt;object,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;object, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Remove (item As KeyValuePair(Of Object, Object)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;obj, obj&gt; -&gt; bool" Usage="scopeStorageDictionary.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The key/value pair.</param>
        <summary>Removes the specified key/value pair from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>true if the key/value pair is removed, or false if <paramref name="item" /> is not found in the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual bool Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Remove (key As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool&#xA;override this.Remove : obj -&gt; bool" Usage="scopeStorageDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <summary>Removes the value that has the specified key from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>true if the key/value pair is removed, or false if <paramref name="key" /> is not found in the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (key As Object, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="scopeStorageDictionary.SetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <param name="value">The value.</param>
        <summary>Sets a value using the specified key in the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="scopeStorageDictionary.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator for the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>The enumerator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public virtual bool TryGetValue (object key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(object key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetValue (key As Object, ByRef value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : obj * obj -&gt; bool&#xA;override this.TryGetValue : obj * obj -&gt; bool" Usage="scopeStorageDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <param name="value">When this method returns, if the key is found, contains the value that is associated with the specified key; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
        <summary>Gets the value that is associated with the specified key from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <returns>true if the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects contain an element that has the specified key; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Web.WebPages.Scope.ScopeStorageDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Collections.Generic.List`1" /> object that contains the values from the concatenated <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> and <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> objects.</summary>
        <value>The object that contains the values.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
