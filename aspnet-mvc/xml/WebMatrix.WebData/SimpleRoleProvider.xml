<Type Name="SimpleRoleProvider" FullName="WebMatrix.WebData.SimpleRoleProvider">
  <TypeSignature Language="C#" Value="public class SimpleRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:WebMatrix.WebData.SimpleRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="F#" Value="type SimpleRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>WebMatrix.WebData</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides basic role-management functionality.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:WebMatrix.WebData.SimpleRoleProvider" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleRoleProvider (System.Web.Security.RoleProvider previousProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Security.RoleProvider previousProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.#ctor(System.Web.Security.RoleProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (previousProvider As RoleProvider)" />
      <MemberSignature Language="F#" Value="new WebMatrix.WebData.SimpleRoleProvider : System.Web.Security.RoleProvider -&gt; WebMatrix.WebData.SimpleRoleProvider" Usage="new WebMatrix.WebData.SimpleRoleProvider previousProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="previousProvider" Type="System.Web.Security.RoleProvider" />
      </Parameters>
      <Docs>
        <param name="previousProvider">The previous role provider.</param>
        <summary>Initializes a new instance of the <see cref="T:WebMatrix.WebData.SimpleRoleProvider" /> class by using the specified role provider.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="simpleRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">The user names to add.</param>
        <param name="roleNames">The roles to add the names to.</param>
        <summary>Adds the specified user names to the specified roles.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">One or more of the specified users already exists in one or more of the specified roles.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:WebMatrix.WebData.SimpleRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="WebMatrix.WebData.SimpleRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve role information for.</summary>
        <value>The name of the application to store and retrieve role information for.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CasingBehavior">
      <MemberSignature Language="C#" Value="public WebMatrix.WebData.SimpleMembershipProviderCasingBehavior CasingBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype WebMatrix.WebData.SimpleMembershipProviderCasingBehavior CasingBehavior" />
      <MemberSignature Language="DocId" Value="P:WebMatrix.WebData.SimpleRoleProvider.CasingBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property CasingBehavior As SimpleMembershipProviderCasingBehavior" />
      <MemberSignature Language="F#" Value="member this.CasingBehavior : WebMatrix.WebData.SimpleMembershipProviderCasingBehavior with get, set" Usage="WebMatrix.WebData.SimpleRoleProvider.CasingBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>WebMatrix.WebData.SimpleMembershipProviderCasingBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:WebMatrix.WebData.SimpleMembershipProviderCasingBehavior" /> for this provider.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="simpleRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to create.</param>
        <summary>Adds a new role.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The role already exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="simpleRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to delete.</param>
        <param name="throwOnPopulatedRole">true to cause an exception to be thrown if one or more users are in <paramref name="roleName" />. In that case, the specified role is not deleted.</param>
        <summary>Deletes the specified role.</summary>
        <returns>true if the role was deleted; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="roleName" /> has one or more members, and <paramref name="throwOnPopulatedRole" /> is true.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="simpleRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role to search in.</param>
        <param name="usernameToMatch">The user name to search for.</param>
        <summary>Returns all of the specified users who are in the specified role.</summary>
        <returns>The names of all of the users where the user name matches <paramref name="usernameToMatch" /> and the user is in the specified role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="simpleRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a list of all roles.</summary>
        <returns>The names of all of the roles.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="simpleRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to return a list of roles for.</param>
        <summary>Returns a list of the roles that a specified user is in.</summary>
        <returns>The names of all of the roles that the specified user is a member of.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The specified user does not have a membership account.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="simpleRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role.</param>
        <summary>Returns the user names that are in the specified role.</summary>
        <returns>The user names that are in the specified role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="simpleRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name.</param>
        <param name="roleName">The name of the role.</param>
        <summary>Returns a value that indicates whether the specified user is in the specified role.</summary>
        <returns>true if the user is in the role; otherwise, false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="simpleRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">The user names to remove from the specified roles.</param>
        <param name="roleNames">The role names to remove the specified user names from.</param>
        <summary>Removes the specified user names from the specified roles.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">One or more of the specified roles do not exist.-or-One or more users are not in all of the specified roles.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The database operation failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebMatrix.WebData.SimpleRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="simpleRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role.</param>
        <summary>Returns a value that indicates whether a specified role exists.</summary>
        <returns>true if the role exists; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserIdColumn">
      <MemberSignature Language="C#" Value="public string UserIdColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserIdColumn" />
      <MemberSignature Language="DocId" Value="P:WebMatrix.WebData.SimpleRoleProvider.UserIdColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property UserIdColumn As String" />
      <MemberSignature Language="F#" Value="member this.UserIdColumn : string with get, set" Usage="WebMatrix.WebData.SimpleRoleProvider.UserIdColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the database column that contains user IDs.</summary>
        <value>The name of the database column in the <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> table that contains user IDs.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameColumn">
      <MemberSignature Language="C#" Value="public string UserNameColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameColumn" />
      <MemberSignature Language="DocId" Value="P:WebMatrix.WebData.SimpleRoleProvider.UserNameColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property UserNameColumn As String" />
      <MemberSignature Language="F#" Value="member this.UserNameColumn : string with get, set" Usage="WebMatrix.WebData.SimpleRoleProvider.UserNameColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the database column that contains user names.</summary>
        <value>The name of the database column in the <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> table that contains user names.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserTableName">
      <MemberSignature Language="C#" Value="public string UserTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserTableName" />
      <MemberSignature Language="DocId" Value="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserTableName As String" />
      <MemberSignature Language="F#" Value="member this.UserTableName : string with get, set" Usage="WebMatrix.WebData.SimpleRoleProvider.UserTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WebMatrix.WebData</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the database table that contains user information.</summary>
        <value>The name of the database table in the <see cref="P:WebMatrix.WebData.SimpleRoleProvider.UserTableName" /> table that contains user information.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
