<Type Name="IOAuthAuthorizationServerProvider" FullName="Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider">
  <TypeSignature Language="C#" Value="public interface IOAuthAuthorizationServerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOAuthAuthorizationServerProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOAuthAuthorizationServerProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOAuthAuthorizationServerProvider" />
  <TypeSignature Language="F#" Value="type IOAuthAuthorizationServerProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for OAuthAuthorizationServerOptions.Provider property used by Authorization
            Server to communicate with the web application while processing requests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthorizationEndpointResponse">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthorizationEndpointResponse (Microsoft.Owin.Security.OAuth.OAuthAuthorizationEndpointResponseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthorizationEndpointResponse(class Microsoft.Owin.Security.OAuth.OAuthAuthorizationEndpointResponseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.AuthorizationEndpointResponse(Microsoft.Owin.Security.OAuth.OAuthAuthorizationEndpointResponseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizationEndpointResponse (context As OAuthAuthorizationEndpointResponseContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthorizationEndpointResponse(Microsoft::Owin::Security::OAuth::OAuthAuthorizationEndpointResponseContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member AuthorizationEndpointResponse : Microsoft.Owin.Security.OAuth.OAuthAuthorizationEndpointResponseContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.AuthorizationEndpointResponse context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthAuthorizationEndpointResponseContext" Index="0" FrameworkAlternate="owin-3.0.1;owin-4.1" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called before the AuthorizationEndpoint redirects its response to the caller. The response could be the
            token, when using implicit flow or the AuthorizationEndpoint when using authorization code flow.  
            An application may implement this call in order to do any final modification of the claims being used 
            to issue access or refresh tokens. This call may also be used in order to add additional 
            response parameters to the authorization endpoint's response.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeEndpoint">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthorizeEndpoint (Microsoft.Owin.Security.OAuth.OAuthAuthorizeEndpointContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthorizeEndpoint(class Microsoft.Owin.Security.OAuth.OAuthAuthorizeEndpointContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.AuthorizeEndpoint(Microsoft.Owin.Security.OAuth.OAuthAuthorizeEndpointContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizeEndpoint (context As OAuthAuthorizeEndpointContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthorizeEndpoint(Microsoft::Owin::Security::OAuth::OAuthAuthorizeEndpointContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeEndpoint : Microsoft.Owin.Security.OAuth.OAuthAuthorizeEndpointContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.AuthorizeEndpoint context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthAuthorizeEndpointContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called at the final stage of an incoming Authorize endpoint request before the execution continues on to the web application component 
            responsible for producing the html response. Anything present in the OWIN pipeline following the Authorization Server may produce the
            response for the Authorize page. If running on IIS any ASP.NET technology running on the server may produce the response for the 
            Authorize page. If the web application wishes to produce the response directly in the AuthorizeEndpoint call it may write to the 
            context.Response directly and should call context.RequestCompleted to stop other handlers from executing. If the web application wishes
            to grant the authorization directly in the AuthorizeEndpoint call it cay call context.OwinContext.Authentication.SignIn with the
            appropriate ClaimsIdentity and should call context.RequestCompleted to stop other handlers from executing.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantAuthorizationCode">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GrantAuthorizationCode (Microsoft.Owin.Security.OAuth.OAuthGrantAuthorizationCodeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GrantAuthorizationCode(class Microsoft.Owin.Security.OAuth.OAuthGrantAuthorizationCodeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.GrantAuthorizationCode(Microsoft.Owin.Security.OAuth.OAuthGrantAuthorizationCodeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GrantAuthorizationCode (context As OAuthGrantAuthorizationCodeContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ GrantAuthorizationCode(Microsoft::Owin::Security::OAuth::OAuthGrantAuthorizationCodeContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GrantAuthorizationCode : Microsoft.Owin.Security.OAuth.OAuthGrantAuthorizationCodeContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.GrantAuthorizationCode context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthGrantAuthorizationCodeContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called when a request to the Token endpoint arrives with a "grant_type" of "authorization_code". This occurs after the Authorize
            endpoint as redirected the user-agent back to the client with a "code" parameter, and the client is exchanging that for an "access_token".
            The claims and properties 
            associated with the authorization code are present in the context.Ticket. The application must call context.Validated to instruct the Authorization
            Server middleware to issue an access token based on those claims and properties. The call to context.Validated may be given a different
            AuthenticationTicket or ClaimsIdentity in order to control which information flows from authorization code to access token.
            The default behavior when using the OAuthAuthorizationServerProvider is to flow information from the authorization code to 
            the access token unmodified.
            See also http://tools.ietf.org/html/rfc6749#section-4.1.3
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantClientCredentials">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GrantClientCredentials (Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GrantClientCredentials(class Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.GrantClientCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GrantClientCredentials (context As OAuthGrantClientCredentialsContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ GrantClientCredentials(Microsoft::Owin::Security::OAuth::OAuthGrantClientCredentialsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GrantClientCredentials : Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.GrantClientCredentials context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called when a request to the Token endpoint arrives with a "grant_type" of "client_credentials". This occurs when a registered client
            application wishes to acquire an "access_token" to interact with protected resources on it's own behalf, rather than on behalf of an authenticated user. 
            If the web application supports the client credentials it may assume the context.ClientId has been validated by the ValidateClientAuthentication call.
            To issue an access token the context.Validated must be called with a new ticket containing the claims about the client application which should be associated
            with the access token. The application should take appropriate measures to ensure that the endpoint isn’t abused by malicious callers.
            The default behavior is to reject this grant type.
            See also http://tools.ietf.org/html/rfc6749#section-4.4.2
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantCustomExtension">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GrantCustomExtension (Microsoft.Owin.Security.OAuth.OAuthGrantCustomExtensionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GrantCustomExtension(class Microsoft.Owin.Security.OAuth.OAuthGrantCustomExtensionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.GrantCustomExtension(Microsoft.Owin.Security.OAuth.OAuthGrantCustomExtensionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GrantCustomExtension (context As OAuthGrantCustomExtensionContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ GrantCustomExtension(Microsoft::Owin::Security::OAuth::OAuthGrantCustomExtensionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GrantCustomExtension : Microsoft.Owin.Security.OAuth.OAuthGrantCustomExtensionContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.GrantCustomExtension context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthGrantCustomExtensionContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called when a request to the Token andpoint arrives with a "grant_type" of any other value. If the application supports custom grant types
            it is entirely responsible for determining if the request should result in an access_token. If context.Validated is called with ticket
            information the response body is produced in the same way as the other standard grant types. If additional response parameters must be
            included they may be added in the final TokenEndpoint call.
            See also http://tools.ietf.org/html/rfc6749#section-4.5
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantRefreshToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GrantRefreshToken (Microsoft.Owin.Security.OAuth.OAuthGrantRefreshTokenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GrantRefreshToken(class Microsoft.Owin.Security.OAuth.OAuthGrantRefreshTokenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.GrantRefreshToken(Microsoft.Owin.Security.OAuth.OAuthGrantRefreshTokenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GrantRefreshToken (context As OAuthGrantRefreshTokenContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ GrantRefreshToken(Microsoft::Owin::Security::OAuth::OAuthGrantRefreshTokenContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GrantRefreshToken : Microsoft.Owin.Security.OAuth.OAuthGrantRefreshTokenContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.GrantRefreshToken context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthGrantRefreshTokenContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called when a request to the Token endpoint arrives with a "grant_type" of "refresh_token". This occurs if your application has issued a "refresh_token" 
            along with the "access_token", and the client is attempting to use the "refresh_token" to acquire a new "access_token", and possibly a new "refresh_token".
            To issue a refresh token the an Options.RefreshTokenProvider must be assigned to create the value which is returned. The claims and properties 
            associated with the refresh token are present in the context.Ticket. The application must call context.Validated to instruct the 
            Authorization Server middleware to issue an access token based on those claims and properties. The call to context.Validated may 
            be given a different AuthenticationTicket or ClaimsIdentity in order to control which information flows from the refresh token to 
            the access token. The default behavior when using the OAuthAuthorizationServerProvider is to flow information from the refresh token to 
            the access token unmodified.
            See also http://tools.ietf.org/html/rfc6749#section-6
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantResourceOwnerCredentials">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GrantResourceOwnerCredentials (Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GrantResourceOwnerCredentials(class Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GrantResourceOwnerCredentials (context As OAuthGrantResourceOwnerCredentialsContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ GrantResourceOwnerCredentials(Microsoft::Owin::Security::OAuth::OAuthGrantResourceOwnerCredentialsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GrantResourceOwnerCredentials : Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.GrantResourceOwnerCredentials context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called when a request to the Token endpoint arrives with a "grant_type" of "password". This occurs when the user has provided name and password
            credentials directly into the client application's user interface, and the client application is using those to acquire an "access_token" and 
            optional "refresh_token". If the web application supports the
            resource owner credentials grant type it must validate the context.Username and context.Password as appropriate. To issue an
            access token the context.Validated must be called with a new ticket containing the claims about the resource owner which should be associated
            with the access token. The application should take appropriate measures to ensure that the endpoint isn’t abused by malicious callers.  . 
            The default behavior is to reject this grant type.
            See also http://tools.ietf.org/html/rfc6749#section-4.3.2
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchEndpoint">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task MatchEndpoint (Microsoft.Owin.Security.OAuth.OAuthMatchEndpointContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MatchEndpoint(class Microsoft.Owin.Security.OAuth.OAuthMatchEndpointContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.MatchEndpoint(Microsoft.Owin.Security.OAuth.OAuthMatchEndpointContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchEndpoint (context As OAuthMatchEndpointContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ MatchEndpoint(Microsoft::Owin::Security::OAuth::OAuthMatchEndpointContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member MatchEndpoint : Microsoft.Owin.Security.OAuth.OAuthMatchEndpointContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.MatchEndpoint context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthMatchEndpointContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called to determine if an incoming request is treated as an Authorize or Token
            endpoint. If Options.AuthorizeEndpointPath or Options.TokenEndpointPath
            are assigned values, then handling this event is optional and context.IsAuthorizeEndpoint and context.IsTokenEndpoint
            will already be true if the request path matches.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEndpoint">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TokenEndpoint (Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TokenEndpoint(class Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.TokenEndpoint(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function TokenEndpoint (context As OAuthTokenEndpointContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ TokenEndpoint(Microsoft::Owin::Security::OAuth::OAuthTokenEndpointContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TokenEndpoint : Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.TokenEndpoint context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called at the final stage of a successful Token endpoint request. An application may implement this call in order to do any final 
            modification of the claims being used to issue access or refresh tokens. This call may also be used in order to add additional 
            response parameters to the Token endpoint's json response body.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEndpointResponse">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TokenEndpointResponse (Microsoft.Owin.Security.OAuth.OAuthTokenEndpointResponseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TokenEndpointResponse(class Microsoft.Owin.Security.OAuth.OAuthTokenEndpointResponseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.TokenEndpointResponse(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointResponseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function TokenEndpointResponse (context As OAuthTokenEndpointResponseContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ TokenEndpointResponse(Microsoft::Owin::Security::OAuth::OAuthTokenEndpointResponseContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TokenEndpointResponse : Microsoft.Owin.Security.OAuth.OAuthTokenEndpointResponseContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.TokenEndpointResponse context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthTokenEndpointResponseContext" Index="0" FrameworkAlternate="owin-3.0.1;owin-4.1" />
      </Parameters>
      <Docs>
        <param name="context" />
        <summary>
            Called before the TokenEndpoint redirects its response to the caller. 
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAuthorizeRequest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateAuthorizeRequest (Microsoft.Owin.Security.OAuth.OAuthValidateAuthorizeRequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateAuthorizeRequest(class Microsoft.Owin.Security.OAuth.OAuthValidateAuthorizeRequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.ValidateAuthorizeRequest(Microsoft.Owin.Security.OAuth.OAuthValidateAuthorizeRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAuthorizeRequest (context As OAuthValidateAuthorizeRequestContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ValidateAuthorizeRequest(Microsoft::Owin::Security::OAuth::OAuthValidateAuthorizeRequestContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ValidateAuthorizeRequest : Microsoft.Owin.Security.OAuth.OAuthValidateAuthorizeRequestContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.ValidateAuthorizeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthValidateAuthorizeRequestContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called for each request to the Authorize endpoint to determine if the request is valid and should continue. 
            The default behavior when using the OAuthAuthorizationServerProvider is to assume well-formed requests, with 
            validated client redirect URI, should continue processing. An application may add any additional constraints.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateClientAuthentication">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateClientAuthentication (Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateClientAuthentication(class Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateClientAuthentication (context As OAuthValidateClientAuthenticationContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ValidateClientAuthentication(Microsoft::Owin::Security::OAuth::OAuthValidateClientAuthenticationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ValidateClientAuthentication : Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.ValidateClientAuthentication context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called to validate that the origin of the request is a registered "client_id", and that the correct credentials for that client are
            present on the request. If the web application accepts Basic authentication credentials, 
            context.TryGetBasicCredentials(out clientId, out clientSecret) may be called to acquire those values if present in the request header. If the web 
            application accepts "client_id" and "client_secret" as form encoded POST parameters, 
            context.TryGetFormCredentials(out clientId, out clientSecret) may be called to acquire those values if present in the request body.
            If context.Validated is not called the request will not proceed further. 
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateClientRedirectUri">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateClientRedirectUri (Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateClientRedirectUri(class Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.ValidateClientRedirectUri(Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateClientRedirectUri (context As OAuthValidateClientRedirectUriContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ValidateClientRedirectUri(Microsoft::Owin::Security::OAuth::OAuthValidateClientRedirectUriContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ValidateClientRedirectUri : Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.ValidateClientRedirectUri context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called to validate that the context.ClientId is a registered "client_id", and that the context.RedirectUri a "redirect_uri" 
            registered for that client. This only occurs when processing the Authorize endpoint. The application MUST implement this
            call, and it MUST validate both of those factors before calling context.Validated. If the context.Validated method is called
            with a given redirectUri parameter, then IsValidated will only become true if the incoming redirect URI matches the given redirect URI. 
            If context.Validated is not called the request will not proceed further. 
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenRequest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateTokenRequest (Microsoft.Owin.Security.OAuth.OAuthValidateTokenRequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateTokenRequest(class Microsoft.Owin.Security.OAuth.OAuthValidateTokenRequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.OAuth.IOAuthAuthorizationServerProvider.ValidateTokenRequest(Microsoft.Owin.Security.OAuth.OAuthValidateTokenRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateTokenRequest (context As OAuthValidateTokenRequestContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ValidateTokenRequest(Microsoft::Owin::Security::OAuth::OAuthValidateTokenRequestContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTokenRequest : Microsoft.Owin.Security.OAuth.OAuthValidateTokenRequestContext -&gt; System.Threading.Tasks.Task" Usage="iOAuthAuthorizationServerProvider.ValidateTokenRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Security.OAuth</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Owin.Security.OAuth.OAuthValidateTokenRequestContext" />
      </Parameters>
      <Docs>
        <param name="context">The context of the event carries information in and results out.</param>
        <summary>
            Called for each request to the Token endpoint to determine if the request is valid and should continue. 
            The default behavior when using the OAuthAuthorizationServerProvider is to assume well-formed requests, with 
            validated client credentials, should continue processing. An application may add any additional constraints.
            </summary>
        <returns>Task to enable asynchronous execution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
