<Type Name="OwinHttpListener" FullName="Microsoft.Owin.Host.HttpListener.OwinHttpListener">
  <TypeSignature Language="C#" Value="public sealed class OwinHttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OwinHttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.Host.HttpListener.OwinHttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OwinHttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OwinHttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OwinHttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This wraps HttpListener and exposes it as an OWIN compatible server.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Host.HttpListener.OwinHttpListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="owinHttpListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Shuts down the listener and disposes it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestProcessingLimits">
      <MemberSignature Language="C#" Value="public void GetRequestProcessingLimits (out int maxAccepts, out int maxRequests);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRequestProcessingLimits([out] int32&amp; maxAccepts, [out] int32&amp; maxRequests) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Host.HttpListener.OwinHttpListener.GetRequestProcessingLimits(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRequestProcessingLimits (ByRef maxAccepts As Integer, ByRef maxRequests As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRequestProcessingLimits([Runtime::InteropServices::Out] int % maxAccepts, [Runtime::InteropServices::Out] int % maxRequests);" />
      <MemberSignature Language="F#" Value="member this.GetRequestProcessingLimits : int * int -&gt; unit" Usage="owinHttpListener.GetRequestProcessingLimits (maxAccepts, maxRequests)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxAccepts" Type="System.Int32" RefType="out" />
        <Parameter Name="maxRequests" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="maxAccepts" />
        <param name="maxRequests" />
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener Listener" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.Host.HttpListener.OwinHttpListener.Listener" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listener As HttpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener ^ Listener { System::Net::HttpListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.Net.HttpListener" Usage="Microsoft.Owin.Host.HttpListener.OwinHttpListener.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HttpListener instance wrapped by this wrapper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequestProcessingLimits">
      <MemberSignature Language="C#" Value="public void SetRequestProcessingLimits (int maxAccepts, int maxRequests);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRequestProcessingLimits(int32 maxAccepts, int32 maxRequests) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Host.HttpListener.OwinHttpListener.SetRequestProcessingLimits(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRequestProcessingLimits (maxAccepts As Integer, maxRequests As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRequestProcessingLimits(int maxAccepts, int maxRequests);" />
      <MemberSignature Language="F#" Value="member this.SetRequestProcessingLimits : int * int -&gt; unit" Usage="owinHttpListener.SetRequestProcessingLimits (maxAccepts, maxRequests)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxAccepts" Type="System.Int32" />
        <Parameter Name="maxRequests" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxAccepts">The maximum number of pending request receives.</param>
        <param name="maxRequests">The maximum number of active requests being processed.</param>
        <summary>
            These are merged as one call because they should be swapped out atomically.
            This controls how many requests the server attempts to process concurrently.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequestQueueLimit">
      <MemberSignature Language="C#" Value="public void SetRequestQueueLimit (long limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRequestQueueLimit(int64 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Host.HttpListener.OwinHttpListener.SetRequestQueueLimit(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRequestQueueLimit (limit As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRequestQueueLimit(long limit);" />
      <MemberSignature Language="F#" Value="member this.SetRequestQueueLimit : int64 -&gt; unit" Usage="owinHttpListener.SetRequestQueueLimit limit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Host.HttpListener</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="limit" />
        <summary>
            Sets the maximum number of requests that will be queued up in Http.Sys.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
