<Type Name="FileExtensionContentTypeProvider" FullName="Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider">
  <TypeSignature Language="C#" Value="public class FileExtensionContentTypeProvider : Microsoft.Owin.StaticFiles.ContentTypes.IContentTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileExtensionContentTypeProvider extends System.Object implements class Microsoft.Owin.StaticFiles.ContentTypes.IContentTypeProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class FileExtensionContentTypeProvider&#xA;Implements IContentTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileExtensionContentTypeProvider : Microsoft::Owin::StaticFiles::ContentTypes::IContentTypeProvider" />
  <TypeSignature Language="F#" Value="type FileExtensionContentTypeProvider = class&#xA;    interface IContentTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin.StaticFiles</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Owin.StaticFiles.ContentTypes.IContentTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides a mapping between file extensions and MIME types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileExtensionContentTypeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileExtensionContentTypeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.StaticFiles</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new provider with a set of default mappings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileExtensionContentTypeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapping As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileExtensionContentTypeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ mapping);" />
      <MemberSignature Language="F#" Value="new Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider" Usage="new Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider mapping" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.StaticFiles</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapping" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="mapping" />
        <summary>
            Creates a lookup engine using the provided mapping.
            It is recommended that the IDictionary instance use StringComparer.OrdinalIgnoreCase.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Mappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Mappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider.Mappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mappings As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Mappings { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mappings : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider.Mappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.StaticFiles</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The cross reference table of file extensions and content-types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetContentType">
      <MemberSignature Language="C#" Value="public bool TryGetContentType (string subpath, out string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetContentType(string subpath, [out] string&amp; contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.StaticFiles.ContentTypes.FileExtensionContentTypeProvider.TryGetContentType(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetContentType (subpath As String, ByRef contentType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetContentType(System::String ^ subpath, [Runtime::InteropServices::Out] System::String ^ % contentType);" />
      <MemberSignature Language="F#" Value="abstract member TryGetContentType : string * string -&gt; bool&#xA;override this.TryGetContentType : string * string -&gt; bool" Usage="fileExtensionContentTypeProvider.TryGetContentType (subpath, contentType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Owin.StaticFiles.ContentTypes.IContentTypeProvider.TryGetContentType(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.StaticFiles</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="subpath">A file path</param>
        <param name="contentType">The resulting MIME type</param>
        <summary>
            Given a file path, determine the MIME type
            </summary>
        <returns>True if MIME type could be determined</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
