<Type Name="ILogger&lt;TCategoryName&gt;" FullName="Microsoft.Extensions.Logging.ILogger&lt;TCategoryName&gt;">
  <TypeSignature Language="C#" Value="public interface ILogger&lt;out TCategoryName&gt; : Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger`1&lt;+ TCategoryName&gt; implements class Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.ILogger`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger(Of Out TCategoryName)&#xA;Implements ILogger" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TCategoryName&gt;&#xA;public interface class ILogger : Microsoft::Extensions::Logging::ILogger" />
  <TypeSignature Language="F#" Value="type ILogger&lt;'CategoryName&gt; = interface&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TCategoryName">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TCategoryName">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
