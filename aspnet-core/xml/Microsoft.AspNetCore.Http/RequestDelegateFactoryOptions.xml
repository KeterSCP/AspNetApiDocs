<Type Name="RequestDelegateFactoryOptions" FullName="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions">
  <TypeSignature Language="C#" Value="public sealed class RequestDelegateFactoryOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RequestDelegateFactoryOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RequestDelegateFactoryOptions" />
  <TypeSignature Language="F#" Value="type RequestDelegateFactoryOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for controlling the behavior of the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate" /> when created using <see cref="T:Microsoft.AspNetCore.Http.RequestDelegateFactory" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestDelegateFactoryOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableInferBodyFromParameters">
      <MemberSignature Language="C#" Value="public bool DisableInferBodyFromParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableInferBodyFromParameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.DisableInferBodyFromParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableInferBodyFromParameters As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableInferBodyFromParameters : bool with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.DisableInferBodyFromParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Prevent the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegateFactory" /> from inferring a parameter should be bound from the request body without an attribute that implements <see cref="T:Microsoft.AspNetCore.Http.Metadata.IFromBodyMetadata" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteParameterNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt;? RouteParameterNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; RouteParameterNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.RouteParameterNames" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteParameterNames As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.RouteParameterNames : seq&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.RouteParameterNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of route parameter names that are specified for this handler.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider? ServiceProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.IServiceProvider" /> instance used to detect if handler parameters are services.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnBadRequest">
      <MemberSignature Language="C#" Value="public bool ThrowOnBadRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnBadRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ThrowOnBadRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowOnBadRequest As Boolean" />
      <MemberSignature Language="F#" Value="member this.ThrowOnBadRequest : bool with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ThrowOnBadRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate" /> should throw a <see cref="T:Microsoft.AspNetCore.Http.BadHttpRequestException" /> in addition to
            writing a <see cref="F:Microsoft.Extensions.Logging.LogLevel.Debug" /> log when handling invalid requests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
