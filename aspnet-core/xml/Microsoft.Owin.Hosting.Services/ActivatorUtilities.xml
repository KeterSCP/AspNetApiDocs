<Type Name="ActivatorUtilities" FullName="Microsoft.Owin.Hosting.Services.ActivatorUtilities">
  <TypeSignature Language="C#" Value="public static class ActivatorUtilities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ActivatorUtilities extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.Hosting.Services.ActivatorUtilities" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivatorUtilities" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivatorUtilities abstract sealed" />
  <TypeSignature Language="F#" Value="type ActivatorUtilities = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin.Hosting</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper code for the various activator services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFactory">
      <MemberSignature Language="C#" Value="public static Func&lt;IServiceProvider,object&gt; CreateFactory (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;class System.IServiceProvider, object&gt; CreateFactory(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Hosting.Services.ActivatorUtilities.CreateFactory(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFactory (type As Type) As Func(Of IServiceProvider, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Func&lt;IServiceProvider ^, System::Object ^&gt; ^ CreateFactory(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateFactory : Type -&gt; Func&lt;IServiceProvider, obj&gt;" Usage="Microsoft.Owin.Hosting.Services.ActivatorUtilities.CreateFactory type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Hosting</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.IServiceProvider,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type" />
        <summary>
            Creates a factory to instantiate a type using constructor service injection if possible.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider services, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider services, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Hosting.Services.ActivatorUtilities.CreateInstance(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (services As IServiceProvider, type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ services, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type -&gt; obj" Usage="Microsoft.Owin.Hosting.Services.ActivatorUtilities.CreateInstance (services, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Hosting</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services" />
        <param name="type" />
        <summary>
            Instantiate an object of the given type, using constructor service injection if possible.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceOrCreateInstance">
      <MemberSignature Language="C#" Value="public static object GetServiceOrCreateInstance (IServiceProvider services, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetServiceOrCreateInstance(class System.IServiceProvider services, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Hosting.Services.ActivatorUtilities.GetServiceOrCreateInstance(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceOrCreateInstance (services As IServiceProvider, type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetServiceOrCreateInstance(IServiceProvider ^ services, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetServiceOrCreateInstance : IServiceProvider * Type -&gt; obj" Usage="Microsoft.Owin.Hosting.Services.ActivatorUtilities.GetServiceOrCreateInstance (services, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin.Hosting</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services" />
        <param name="type" />
        <summary>
            Retrieve an instance of the given type from the service provider. If one is not found then instantiate it directly.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
