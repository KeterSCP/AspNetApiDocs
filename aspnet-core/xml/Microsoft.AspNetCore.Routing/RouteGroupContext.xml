<Type Name="RouteGroupContext" FullName="Microsoft.AspNetCore.Routing.RouteGroupContext">
  <TypeSignature Language="C#" Value="public sealed class RouteGroupContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RouteGroupContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.RouteGroupContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RouteGroupContext" />
  <TypeSignature Language="F#" Value="type RouteGroupContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the information accessible to <see cref="M:Microsoft.AspNetCore.Routing.EndpointDataSource.GetGroupedEndpoints(Microsoft.AspNetCore.Routing.RouteGroupContext)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteGroupContext (Microsoft.AspNetCore.Routing.Patterns.RoutePattern prefix, System.Collections.Generic.IReadOnlyList&lt;Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt; conventions, IServiceProvider applicationServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Routing.Patterns.RoutePattern prefix, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Action`1&lt;class Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt; conventions, class System.IServiceProvider applicationServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteGroupContext.#ctor(Microsoft.AspNetCore.Routing.Patterns.RoutePattern,System.Collections.Generic.IReadOnlyList{System.Action{Microsoft.AspNetCore.Builder.EndpointBuilder}},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prefix As RoutePattern, conventions As IReadOnlyList(Of Action(Of EndpointBuilder)), applicationServices As IServiceProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Routing.RouteGroupContext : Microsoft.AspNetCore.Routing.Patterns.RoutePattern * System.Collections.Generic.IReadOnlyList&lt;Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt; * IServiceProvider -&gt; Microsoft.AspNetCore.Routing.RouteGroupContext" Usage="new Microsoft.AspNetCore.Routing.RouteGroupContext (prefix, conventions, applicationServices)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="Microsoft.AspNetCore.Routing.Patterns.RoutePattern" />
        <Parameter Name="conventions" Type="System.Collections.Generic.IReadOnlyList&lt;System.Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt;" />
        <Parameter Name="applicationServices" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="prefix">The full group prefix. See <see cref="P:Microsoft.AspNetCore.Routing.RouteGroupContext.Prefix" />.</param>
        <param name="conventions">All conventions added to a parent group. See <see cref="P:Microsoft.AspNetCore.Routing.RouteGroupContext.Conventions" />.</param>
        <param name="applicationServices">Application services. See <see cref="P:Microsoft.AspNetCore.Routing.RouteGroupContext.ApplicationServices" />.</param>
        <summary>
            Constructs a new <see cref="T:Microsoft.AspNetCore.Routing.RouteGroupContext" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationServices">
      <MemberSignature Language="C#" Value="public IServiceProvider ApplicationServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ApplicationServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteGroupContext.ApplicationServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationServices As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ApplicationServices : IServiceProvider" Usage="Microsoft.AspNetCore.Routing.RouteGroupContext.ApplicationServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.IServiceProvider" /> instance used to access application services.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conventions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt; Conventions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Action`1&lt;class Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt; Conventions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteGroupContext.Conventions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conventions As IReadOnlyList(Of Action(Of EndpointBuilder))" />
      <MemberSignature Language="F#" Value="member this.Conventions : System.Collections.Generic.IReadOnlyList&lt;Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt;" Usage="Microsoft.AspNetCore.Routing.RouteGroupContext.Conventions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Action&lt;Microsoft.AspNetCore.Builder.EndpointBuilder&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all conventions added to ancestor <see cref="T:Microsoft.AspNetCore.Routing.RouteGroupBuilder" /> instances returned from <see cref="M:Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGroup(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,Microsoft.AspNetCore.Routing.Patterns.RoutePattern)" />
            via <see cref="M:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder.Add(System.Action{Microsoft.AspNetCore.Builder.EndpointBuilder})" />. These should be applied in order when building every <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" />
            returned from <see cref="M:Microsoft.AspNetCore.Routing.EndpointDataSource.GetGroupedEndpoints(Microsoft.AspNetCore.Routing.RouteGroupContext)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Routing.Patterns.RoutePattern Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Routing.Patterns.RoutePattern Prefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteGroupContext.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As RoutePattern" />
      <MemberSignature Language="F#" Value="member this.Prefix : Microsoft.AspNetCore.Routing.Patterns.RoutePattern" Usage="Microsoft.AspNetCore.Routing.RouteGroupContext.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.Patterns.RoutePattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Routing.RouteEndpoint.RoutePattern" /> which should prefix the <see cref="P:Microsoft.AspNetCore.Routing.RouteEndpoint.RoutePattern" /> of all <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> instances
            returned by the call to <see cref="M:Microsoft.AspNetCore.Routing.EndpointDataSource.GetGroupedEndpoints(Microsoft.AspNetCore.Routing.RouteGroupContext)" />. This accounts for nested groups and gives the full group prefix
            not just the prefix supplied to the innermost call to <see cref="M:Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGroup(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,Microsoft.AspNetCore.Routing.Patterns.RoutePattern)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
