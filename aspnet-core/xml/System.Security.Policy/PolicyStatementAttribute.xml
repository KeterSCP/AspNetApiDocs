<Type Name="PolicyStatementAttribute" FullName="System.Security.Policy.PolicyStatementAttribute">
  <TypeSignature Language="C#" Value="public enum PolicyStatementAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PolicyStatementAttribute extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.PolicyStatementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Enum PolicyStatementAttribute" />
  <TypeSignature Language="C++ CLI" Value="public enum class PolicyStatementAttribute" />
  <TypeSignature Language="F#" Value="type PolicyStatementAttribute = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines special attribute flags for security policy on code groups.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Policy.PolicyStatementAttribute All = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.PolicyStatementAttribute.All" />
      <MemberSignature Language="VB.NET" Value="All" />
      <MemberSignature Language="C++ CLI" Value="All" />
      <MemberSignature Language="F#" Value="All = 3" Usage="System.Security.Policy.PolicyStatementAttribute.All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatementAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>All attribute flags are set.</summary>
      </Docs>
    </Member>
    <Member MemberName="Exclusive">
      <MemberSignature Language="C#" Value="Exclusive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Policy.PolicyStatementAttribute Exclusive = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />
      <MemberSignature Language="VB.NET" Value="Exclusive" />
      <MemberSignature Language="C++ CLI" Value="Exclusive" />
      <MemberSignature Language="F#" Value="Exclusive = 1" Usage="System.Security.Policy.PolicyStatementAttribute.Exclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatementAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The exclusive code group flag. When a code group has this flag set, only the permissions associated with that code group are granted to code belonging to the code group. At most, one code group matching a given piece of code can be set as exclusive.</summary>
      </Docs>
    </Member>
    <Member MemberName="LevelFinal">
      <MemberSignature Language="C#" Value="LevelFinal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Policy.PolicyStatementAttribute LevelFinal = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal" />
      <MemberSignature Language="VB.NET" Value="LevelFinal" />
      <MemberSignature Language="C++ CLI" Value="LevelFinal" />
      <MemberSignature Language="F#" Value="LevelFinal = 2" Usage="System.Security.Policy.PolicyStatementAttribute.LevelFinal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatementAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The flag representing a policy statement that causes lower policy levels to not be evaluated as part of the resolve operation, effectively allowing the policy level to override lower levels.</summary>
      </Docs>
    </Member>
    <Member MemberName="Nothing">
      <MemberSignature Language="C#" Value="Nothing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Policy.PolicyStatementAttribute Nothing = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.PolicyStatementAttribute.Nothing" />
      <MemberSignature Language="VB.NET" Value="Nothing" />
      <MemberSignature Language="C++ CLI" Value="Nothing" />
      <MemberSignature Language="F#" Value="Nothing = 0" Usage="System.Security.Policy.PolicyStatementAttribute.Nothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatementAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No flags are set.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
