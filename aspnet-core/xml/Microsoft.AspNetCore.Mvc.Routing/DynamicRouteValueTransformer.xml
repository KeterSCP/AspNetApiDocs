<Type Name="DynamicRouteValueTransformer" FullName="Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer">
  <TypeSignature Language="C#" Value="public abstract class DynamicRouteValueTransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DynamicRouteValueTransformer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DynamicRouteValueTransformer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicRouteValueTransformer abstract" />
  <TypeSignature Language="F#" Value="type DynamicRouteValueTransformer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for dynamically manipulating route value to select a controller action or page.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" /> can be used with
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDynamicControllerRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" />
            or <c>MapDynamicPageRoute</c> to implement custom logic that selects a controller action or page.
            </para>
      <para>
            The route values returned from a <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)" /> implementation
            will be used to select an action based on matching of the route values. All actions that match the route values
            will be considered as candidates, and may be further disambiguated by <see cref="T:Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy" />
            implementations such as <see cref="T:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy" />.
            </para>
      <para>
            Implementations <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" /> should be registered with the service
            collection as type <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />. Implementations can use any service
            lifetime.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DynamicRouteValueTransformer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DynamicRouteValueTransformer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Routing.RouteValueDictionary&gt; TransformAsync (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.AspNetCore.Routing.RouteValueDictionary&gt; TransformAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TransformAsync (httpContext As HttpContext, values As RouteValueDictionary) As ValueTask(Of RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::ValueTask&lt;Microsoft::AspNetCore::Routing::RouteValueDictionary ^&gt; TransformAsync(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member TransformAsync : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Routing.RouteValueDictionary -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Routing.RouteValueDictionary&gt;" Usage="dynamicRouteValueTransformer.TransformAsync (httpContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Routing.RouteValueDictionary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="values">The route values associated with the current match. Implementations should not modify <paramref name="values" />.</param>
        <summary>
            Creates a set of transformed route values that will be used to select an action.
            </summary>
        <returns>A task which asynchronously returns a set of route values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
