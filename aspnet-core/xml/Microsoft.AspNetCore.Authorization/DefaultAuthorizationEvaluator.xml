<Type Name="DefaultAuthorizationEvaluator" FullName="Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator">
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAuthorizationEvaluator : Microsoft::AspNetCore::Authorization::IAuthorizationEvaluator" />
  <TypeSignature Language="C#" Value="public class DefaultAuthorizationEvaluator : Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultAuthorizationEvaluator extends System.Object implements class Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultAuthorizationEvaluator&#xA;Implements IAuthorizationEvaluator" />
  <TypeSignature Language="F#" Value="type DefaultAuthorizationEvaluator = class&#xA;    interface IAuthorizationEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Determines whether an authorization request was successful or not.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthorizationEvaluator();" />
      <MemberSignature Language="C#" Value="public DefaultAuthorizationEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Authorization::AuthorizationResult ^ Evaluate(Microsoft::AspNetCore::Authorization::AuthorizationHandlerContext ^ context);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authorization.AuthorizationResult Evaluate (Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationResult Evaluate(class Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator.Evaluate(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (context As AuthorizationHandlerContext) As AuthorizationResult" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext -&gt; Microsoft.AspNetCore.Authorization.AuthorizationResult&#xA;override this.Evaluate : Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext -&gt; Microsoft.AspNetCore.Authorization.AuthorizationResult" Usage="defaultAuthorizationEvaluator.Evaluate context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.Evaluate(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" />
      </Parameters>
      <Docs>
        <param name="context">The authorization information.</param>
        <summary>
            Determines whether the authorization result was successful or not.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
